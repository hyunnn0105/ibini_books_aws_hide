<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 속성에는 사용할 인터페이스의 풀 패키지 경로 + 인터페이스 이름 -->
<mapper namespace="com.ibini.my_books.member.repository.MemberMapper">

    <resultMap id="MemberMap" type="com.ibini.my_books.member.domain.Member">
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="post_amount" property="postAmount"/>
        <result column="join_date" property="joinDate"/>
        <result column="last_login" property="lastLogin"/>
        <result column="email_verification" property="emailVerification"/>
        <result column="session_id" property="sessionId"/>
        <result column="limit_time" property="limitTime"/>
    </resultMap>

    <!--   일반 회원 가입 기능   -->
    <insert id="register">

        INSERT INTO tbl_member
        (
        account, user_id,
        password, user_name, email
        )
        VALUES
        (
        TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(seq_tbl_member.nextval, 4, '0'),
        #{userId}, #{password}, #{userName}, #{email}
        )

    </insert>

    <!--    중복 체크 기능(아이디와 이메일을 동시에 처리 = 동적 sql)   -->
    <select id="isDuplicate" resultType="int">

        SELECT COUNT(*)
        FROM tbl_member

        <if test="type=='userId'" >
            WHERE user_id = #{value}
        </if>
        <if test="type=='email'">
            WHERE email = #{value}
        </if>
        <!--        결과가 1이면 중복, 0이면 회원가입 가능 -->

    </select>


    <!--    회원조회 기능   -->
    <select id="findUser" resultMap="MemberMap">

        SELECT *
        FROM tbl_member
        WHERE user_id = #{userId}

    </select>

<!--    &lt;!&ndash;  패스워드 일치 확인   &ndash;&gt;-->
<!--    <select id="pwCheck" resultType="String">-->
<!--        SELECT password FROM tbl_member WHERE account = #{account}-->
<!--    </select>-->

    <!--  회원 이메일 수정 기능   -->
    <update id="updateEmail">
        UPDATE tbl_member
        SET email = #{email}
        WHERE user_id = #{userId}

    </update>

    <!--  회원 닉네임 수정 기능   -->
    <update id="updateName">
        UPDATE tbl_member
        SET user_name = #{userName}
        WHERE user_id = #{userId}

    </update>

<!--  회원 비밀번호 수정 기능   -->
    <update id="updatePw">
        UPDATE tbl_member
        SET password = #{password}
        WHERE user_id = #{userId}

    </update>

<!--  회원 탈퇴  -->
    <delete id="memberDelete">
        DELETE FROM tbl_member
        WHERE user_id = #{userId}
    </delete>

    <!--  자동 로그인 정보 추가  -->
    <update id="saveAutoLoginValue">

        UPDATE tbl_member
        SET session_id = #{sessionId}, limit_time = #{limitTime}
        WHERE user_id = #{userId}

    </update>

    <!--  세션 아이디로 회원정보조회  -->
    <select id="findMemberBysessionId" resultMap="MemberMap">

        SELECT * FROM tbl_member
        WHERE session_id = #{sessionId}

    </select>

    <!--  userId로 account 가져오기  -->
    <select id="changIdToAccount" resultType="String">
        select account
        from tbl_member
        where user_id = #{userId}
    </select>

    <resultMap id="manageInquiry" type="com.ibini.my_books.member.domain.InquiryTable">
        <result column="serial_number" property="serialNumber"/>
        <result column="user_id" property="userId"/>
        <result column="inquiry_title" property="inquiryTitle"/>
        <result column="inquiry_date" property="inquiryDate"/>
        <result column="answer_date" property="answerDate"/>
    </resultMap>

<!--    회원관리       -->

    <!--  신규회원 회원 관리 테이블에 등록하기  -->

    <insert id="registerManageMember">

        INSERT INTO tbl_manage_member
        (user_id)
        VALUES
        ( #{userId} )

    </insert>

      <!-- 문의사항 등록하기  -->
    <insert id="inquiryRegister">
        INSERT INTO tbl_manage_inquiry
            (
                serial_number,
                user_id, inquiry_title, inquiry
            )
        VALUES
            (
                TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(seq_tbl_manage_inquiry.nextval, 4, '0'),
                #{userId}, #{inquiryTitle}, #{inquiry}
            )
    </insert>

        <!--    답변 등록하기 -->
    <update id="answerRegister">
        UPDATE tbl_manage_inquiry
        SET answer = #{answer}, answer_date = SYSDATE
        WHERE serial_number = #{serialNumber}
    </update>

        <!-- 문의내역 상세 조회  -->
    <select id="findOneInquiry" resultMap="manageInquiry">

        SELECT *
        FROM tbl_manage_inquiry
        WHERE serial_number = #{serialNumber}

    </select>

    <!-- 회원 마이페이지에서 회원 문의내역 조회하기  -->
    <select id="findMemberInquiry" resultMap="manageInquiry">

        SELECT *
           FROM (
             SELECT ROWNUM rn, f_inquiry.*
                FROM (
                 SELECT  *
                          FROM tbl_manage_inquiry
                          WHERE user_id = #{userId}
                          ORDER BY inquiry_date DESC
                      )f_inquiry
        )
        WHERE rn BETWEEN (#{page.pageNum} - 1) * #{page.amount} + 1  AND (#{page.pageNum} * #{page.amount})

    </select>

<!--     관리자 페이지에서 문의내역 전체 조회하기    -->

    <select id="findAllInquiry" resultMap="manageInquiry">

        SELECT *
             FROM (
                   SELECT ROWNUM rn, f_inquiry.*
                   FROM (
                         SELECT  *
                         FROM tbl_manage_inquiry
                         ORDER BY inquiry_date DESC
                         )f_inquiry
                     )
        WHERE rn BETWEEN (#{pageNum} - 1) * #{amount} + 1  AND (#{pageNum} * #{amount})


    </select>

    <!-- 문의글 수정 -->
    <update id="inquiryModify">
        UPDATE tbl_manage_inquiry
        SET inquiry_title = #{inquiryTitle}, inquiry = #{inquiry}
        WHERE serial_number = #{serialNumber}
    </update>

    <!-- 문의글 삭제 -->
    <delete id="inquiryDelete">
        DELETE FROM tbl_manage_inquiry
        WHERE serial_number = #{serialNumber}
    </delete>

<!--    // 회원 로그인 상태 - 총 문의글 수 구하기 (페이지 처리)-->
    <select id="getTotalMemberInquiry" resultType="int">

        SELECT COUNT(*) FROM tbl_manage_inquiry WHERE user_id = #{userId}

    </select>

<!--    // 관리자 로그인 상태 - 총 문의글 수 구하기 (페이지 처리)-->
    <select id="getTotalInquiry" resultType="int">

        SELECT COUNT(*) FROM tbl_manage_inquiry

    </select>



</mapper>